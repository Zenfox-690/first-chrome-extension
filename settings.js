function showToast(e){let t=document.getElementById("toastContainer"),n=document.createElement("div");n.className="toast",n.textContent=e,t.appendChild(n),setTimeout(()=>t.removeChild(n),3e3)}function debounce(e,t){let n;return function(...o){clearTimeout(n),n=setTimeout(()=>e.apply(this,o),t)}}function saveNotes(){let e=[];document.querySelectorAll(".note textarea").forEach(t=>{t.value.trim()&&e.push(t.value)}),chrome.storage.local.set({notes:e})}const debouncedSaveNotes=debounce(saveNotes,300);function renderSiteNotes(e){let t=document.getElementById("siteNotesContainer");for(let n in t.innerHTML="",e){let o=e[n],s=document.createElement("div");s.className="site-note-container",s.dataset.domain=n;let l=document.createElement("div");l.className="site-note-title",l.textContent=n,l.addEventListener("click",()=>{s.classList.toggle("collapsed")});let a=document.createElement("textarea");a.value=o,a.addEventListener("input",()=>saveSiteNote(n,a.value));let d=document.createElement("button");d.className="delete-site-note",d.textContent="Delete",d.addEventListener("click",()=>deleteSiteNote(n)),s.append(l,a,d),t.appendChild(s)}}function saveSiteNote(e,t){chrome.storage.local.get("siteNotes",n=>{let o=n.siteNotes||{};o[e]=t,chrome.storage.local.set({siteNotes:o})})}function deleteSiteNote(e){chrome.storage.local.get("siteNotes",t=>{let n=t.siteNotes||{};delete n[e],chrome.storage.local.set({siteNotes:n},()=>{renderSiteNotes(n),showToast(`Deleted note for ${e}`)})})}document.addEventListener("DOMContentLoaded",()=>{chrome.storage.local.get({speedMin:.25,speedMax:8,showDarkMode:!0,showBrightness:!0,showPlayback:!0,showSaveImageAsPdf:!0,showClearCache:!0,showChangeTitle:!0,showSession:!0,notes:[],siteNotes:{}},e=>{document.getElementById("speedMin").value=e.speedMin,document.getElementById("speedMax").value=e.speedMax,document.getElementById("toggleDarkMode").checked=e.showDarkMode,document.getElementById("toggleBrightness").checked=e.showBrightness,document.getElementById("togglePlayback").checked=e.showPlayback,document.getElementById("toggleSaveImageAsPdf").checked=e.showSaveImageAsPdf,document.getElementById("toggleClearCache").checked=e.showClearCache,document.getElementById("toggleChangeTitle").checked=e.showChangeTitle,document.getElementById("toggleSession").checked=e.showSession;let t=document.getElementById("notesContainer"),n=document.getElementById("noteTemplate");e.notes.forEach(e=>{let o=n.content.cloneNode(!0),s=o.querySelector("textarea");s.value=e,s.addEventListener("input",debouncedSaveNotes),o.querySelector(".delete-note").addEventListener("click",function(){this.closest(".note").remove(),debouncedSaveNotes()}),t.appendChild(o)}),0===e.notes.length&&document.getElementById("addNoteBtn").click(),document.getElementById("addNoteBtn").addEventListener("click",()=>{let e=n.content.cloneNode(!0),o=e.querySelector("textarea");o.addEventListener("input",debouncedSaveNotes),e.querySelector(".delete-note").addEventListener("click",function(){this.closest(".note").remove(),debouncedSaveNotes()}),t.appendChild(e),o.focus()}),renderSiteNotes(e.siteNotes)}),document.getElementById("saveSettings").addEventListener("click",()=>{let e=parseFloat(document.getElementById("speedMin").value),t=parseFloat(document.getElementById("speedMax").value);if(isNaN(e)||isNaN(t)||e>=t)return alert("Invalid playback speed limits â€” ensure min < max and both are numbers.");chrome.storage.local.set({speedMin:e,speedMax:t,showDarkMode:document.getElementById("toggleDarkMode").checked,showBrightness:document.getElementById("toggleBrightness").checked,showPlayback:document.getElementById("togglePlayback").checked,showSaveImageAsPdf:document.getElementById("toggleSaveImageAsPdf").checked,showClearCache:document.getElementById("toggleClearCache").checked,showChangeTitle:document.getElementById("toggleChangeTitle").checked,showSession:document.getElementById("toggleSession").checked},()=>showToast("Settings saved!"))}),document.getElementById("openImage").addEventListener("click",async()=>{let e=["png","jpg"];for(let t of e)try{let n=chrome.runtime.getURL(`fullscreen-image.${t}`),o=await fetch(n);if(o.ok){chrome.tabs.create({url:n});return}}catch{}alert('Please add "fullscreen-image.png" or ".jpg" to the extension folder')}),document.getElementById("exportConfigBtn").addEventListener("click",()=>{chrome.storage.local.get(null,e=>{let t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=URL.createObjectURL(t);chrome.downloads.download({url:n,filename:"toolkit-settings.json",saveAs:!0},()=>{URL.revokeObjectURL(n),showToast("Settings exported")})})}),document.getElementById("importConfigBtn").addEventListener("click",()=>{document.getElementById("importConfigFile").click()}),document.getElementById("importConfigFile").addEventListener("change",e=>{let t=e.target.files[0];if(!t)return showToast("No file selected");let n=new FileReader;n.onload=()=>{try{let e=JSON.parse(n.result);chrome.storage.local.set(e,()=>{showToast("Settings imported"),location.reload()})}catch{showToast("Invalid settings file")}},n.readAsText(t)})});